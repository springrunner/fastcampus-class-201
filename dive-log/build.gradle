plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'java' //https://docs.gradle.org/current/userguide/java_plugin.html#java_plugin
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2' //https://docs.spring.io/spring-restdocs/docs/current/reference/html5/#getting-started-build-configuration
}

group = 'com.fastcampus.springrunner'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorEx
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2021.0.3'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	//implementation 'io.micrometer:micrometer-registry-prometheus'
	//implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	// 추후 ELK를 사용한다면 ElasticSearch 데이터 기본저장구조인 JSON 형태로 변경하기 위해 필요함
	implementation 'net.logstash.logback:logstash-logback-encoder:7.2'
	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'com.h2database:h2'
	implementation 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	asciidoctorEx 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

tasks.named('test') {
	useJUnitPlatform {
		excludeTags("integration")
	}
}

tasks.register("integrationTest", Test) {
	outputs.dir snippetsDir
	useJUnitPlatform {
		includeTags("integration")
	}
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	configurations 'asciidoctorEx'
	dependsOn integrationTest
}

bootJar {
	from ("${asciidoctor.outputDir}") { // 패키징!! +_+) 운영환경 배포시에는 asciidoctor 태스크를 빼고
		into 'static/docs'
	}
	archiveFileName="dive-log.jar"
}

task awsZip(type: Zip) {
    description "elasticbeanstalk 용 배포 zip"
    from bootJar
    from file("Procfile")
    into(".ebextensions") {
        from file("ebextensions")
    }
    into(".platform") {
        from file("platform")
    }
    archiveFileName = "dive-log.zip"
}

springBoot {
	buildInfo()
	mainClass = "com.fastcampus.springrunner.divelog.DiveLogApplication"
}
